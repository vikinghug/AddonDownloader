{
  "name": "github-download",
  "version": "0.3.0",
  "description": "Easily download Github repos without any external dependencies such as Git, Tar, Unzip, etc.",
  "repository": {
    "type": "git",
    "url": "git@github.com:jprichardson/node-github-download.git"
  },
  "keywords": [
    "github",
    "repository",
    "repo",
    "download",
    "fetch",
    "git"
  ],
  "author": {
    "name": "JP Richardson",
    "email": "jprichardson@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": ""
    }
  ],
  "dependencies": {
    "request": "~2.12.0",
    "vcsurl": "~0.1.0",
    "adm-zip": "~0.4.3",
    "fs-extra": "^0.9.1"
  },
  "devDependencies": {
    "testutil": "~0.5.0",
    "mocha": "*",
    "nock": "~0.14.3"
  },
  "main": "./lib/github-download.js",
  "scripts": {
    "test": "mocha test"
  },
  "readme": "Node.js - github-download\n================\n\n[![build status](https://secure.travis-ci.org/jprichardson/node-github-download.png)](http://travis-ci.org/jprichardson/node-github-download)\n\nEasily download Github repos without any external dependencies such as Git, Tar, Unzip, etc.\n\n\nWhy?\n----\n\nI really like the concept of managing user defined projects, repos, file structures (package management) on Github like the way that [Component](https://github.com/component) does package management. I have a package management system [Rock](https://github.com/rocktemplates) that I use to create skeleton/templates of projects. I wanted Rock to use Github as a package management system. I also didn't want any dependencies amongst any 3rd party programs like Git, Tar, or Unzip. Pure Node.js JavaScript is what I wanted.\n\n\nInstallation\n------------\n\n    npm install github-download\n\n\n\nUsage\n-----\n\n### ghdownload(params, dir)\n\nDownloads the latest copy of some Github reference (branch, tag, or commit), or the `master` branch by default (specifically the `master` branch, it does _not_ honor Github's default branch configuration). This will still work even if the Github API limit has been reached.\n\n- **params**: Can either be:\n     - a Github URL string such as:\n         - `https://github.com/jprichardson/node-vcsurl.git`\n         - `git@github.com:jprichardson/node-vcsurl.git`\n         - `git://github.com/jprichardson/node-vcsurl.git`\n         - and even including a reference, e.g. `https://github.com/jprichardson/node-vcsurl.git#master`\n     - or an object like so: `{user: 'jprichardson', repo: 'vcsurl', ref: 'master'}`\n- **dir**: The output directory. Uses the current working directory if nothing is specified.\n\nReturns a GithubDownloader object that emits events on `dir`, `file`, and `end`.\n\nExample:\n\n```javascript\nvar ghdownload = require('github-download')\n  , exec = require('exec')\n\nghdownload({user: 'jprichardson', repo: 'node-batchflow', ref: 'master'}, process.cwd())\n.on('dir', function(dir) {\n  console.log(dir)\n})\n.on('file', function(file) {\n  console.log(file)\n})\n.on('zip', function(zipUrl) { //only emitted if Github API limit is reached and the zip file is downloaded\n  console.log(zipUrl)\n})\n.on('error', function(err) {\n  console.error(err)\n})\n.on('end', function() {\n  exec('tree', function(err, stdout, sderr) {\n    console.log(stdout)\n  })\n})\n```\n\nOutputs:\n\n    .\n    ├── CHANGELOG.md\n    ├── LICENSE\n    ├── README.md\n    ├── lib\n    │   └── batchflow.js\n    ├── package.json\n    └── test\n        ├── batchflow-par-array.test.js\n        ├── batchflow-par-limit.test.js\n        ├── batchflow-par-object.test.js\n        ├── batchflow-seq-array.test.js\n        ├── batchflow-seq-object.test.js\n        ├── batchflow.test.js\n        ├── mocha.opts\n        └── resources\n\n    3 directories, 12 files\n\n\n\nLicense\n-------\n\n(MIT License)\n\nCopyright 2013, JP Richardson  <jprichardson@gmail.com>\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jprichardson/node-github-download/issues"
  },
  "_id": "github-download@0.3.0",
  "_shasum": "39f55d754bdedaee51cc4a2fef5852f6043479e0",
  "_from": "github-download@",
  "_resolved": "https://registry.npmjs.org/github-download/-/github-download-0.3.0.tgz",
  "homepage": "https://github.com/jprichardson/node-github-download"
}

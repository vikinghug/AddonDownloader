// Generated by CoffeeScript 1.7.1
(function() {
  var Issue,
    __slice = [].slice;

  Issue = (function() {
    function Issue(repo, number, client) {
      this.repo = repo;
      this.number = number;
      this.client = client;
    }

    Issue.prototype.info = function(cb) {
      return this.client.get("/repos/" + this.repo + "/issues/" + this.number, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Issue info error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Issue.prototype.update = function(obj, cb) {
      return this.client.post("/repos/" + this.repo + "/issues/" + this.number, obj, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Issue update error"));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Issue.prototype.comments = function() {
      var cb, params, _i, _ref;
      params = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), cb = arguments[_i++];
      return (_ref = this.client).get.apply(_ref, ["/repos/" + this.repo + "/issues/" + this.number + "/comments"].concat(__slice.call(params), [function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error('Issue Comments error'));
        } else {
          return cb(null, b, h);
        }
      }]));
    };

    return Issue;

  })();

  module.exports = Issue;

}).call(this);
